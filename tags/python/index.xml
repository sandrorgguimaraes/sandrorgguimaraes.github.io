<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Diário de Bordo – python</title><link>https://sandrorgguimaraes.github.io/tags/python/</link><description>Recent content in python on Diário de Bordo</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><lastBuildDate>Mon, 14 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://sandrorgguimaraes.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Blog: CLI com Python</title><link>https://sandrorgguimaraes.github.io/blog/2022/02/14/cli-with-python/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><guid>https://sandrorgguimaraes.github.io/blog/2022/02/14/cli-with-python/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Uma Interface de Linha de Comandos (ILC), em inglês &lt;em>Command-Line Interface&lt;/em> (CLI), é um meio de interagir com um programa de computador, onde o utilizador emite comandos para o programa sob a forma de sucessivas linhas de texto (linhas de comando).&lt;/p>
&lt;p>Fonte.: &lt;a href="https://pt.wikipedia.org/wiki/Interface_de_linha_de_comandos/">https://pt.wikipedia.org/wiki/Interface_de_linha_de_comandos/&lt;/a>&lt;/p>
&lt;/div>
&lt;hr>
&lt;h2 id="make-your-python-cli-tools-pop-with-richhttpshackadaycom20220119make-your-python-cli-tools-pop-with-rich">&lt;a href="https://hackaday.com/2022/01/19/make-your-python-cli-tools-pop-with-rich/">Make Your Python CLI Tools Pop With Rich&lt;/a>&lt;/h2>
&lt;p>por &lt;a href="https://sandrorgguimaraes.github.io/autores/matthew-carlson/">&lt;strong>Matthew Carlson&lt;/strong>&lt;/a> em 19/01/2022.&lt;/p>
&lt;p>Apresentação da biblioteca &lt;code>Rich&lt;/code> para dar um &amp;lsquo;up&amp;rsquo; nas ferramentas de linha de comando.&lt;/p>
&lt;p>&lt;a href="https://github.com/Textualize/rich/blob/master/README.pt-br.md">Repositório do projeto Rich&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://rich.readthedocs.io/en/latest/index.html#">Documentação da biblioteca Rich&lt;/a>&lt;/p>
&lt;hr></description></item><item><title>Blog: Debug in Python</title><link>https://sandrorgguimaraes.github.io/blog/2022/02/14/debug-in-python/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><guid>https://sandrorgguimaraes.github.io/blog/2022/02/14/debug-in-python/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Na programação de computadores e desenvolvimento de software, debugging ou depuração em portugues, é o processo de encontrar e resolver bugs (defeitos ou problemas que impedem a operação correta) em programas de computador, software ou sistemas.&lt;/p>
&lt;p>Fonte.: &lt;a href="https://en.wikipedia.org/wiki/Debugging/">https://en.wikipedia.org/wiki/Debugging/&lt;/a>&lt;/p>
&lt;/div>
&lt;hr>
&lt;h2 id="debugging-your-code-in-python--pdb-vs-rpdbhttpsitnextiodebugging-your-code-in-python-pdb-vs-rpdb-e7bb918a8ac3">&lt;a href="https://itnext.io/debugging-your-code-in-python-pdb-vs-rpdb-e7bb918a8ac3">Debugging your code in Python — pdb vs. rpdb&lt;/a>&lt;/h2>
&lt;p>por &lt;a href="https://sandrorgguimaraes.github.io/autores/fernando-diaz/">&lt;strong>Fernando Diaz&lt;/strong>&lt;/a> em 08/09/2021.&lt;/p>
&lt;p>Veja a diferença entre o &lt;code>pdb&lt;/code> e o &lt;code>rpdb&lt;/code> e como usa-los na prática.&lt;/p>
&lt;hr></description></item><item><title>Blog: Dicas Python</title><link>https://sandrorgguimaraes.github.io/blog/2022/02/14/dicas-python/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><guid>https://sandrorgguimaraes.github.io/blog/2022/02/14/dicas-python/</guid><description>
&lt;hr>
&lt;h2 id="3-cool-python-libraries-that-will-save-you-time-and-efforthttpssamuel-vidovichmediumcom3-cool-python-libraries-that-will-save-you-time-and-effort-27fcdc6762d5">&lt;a href="https://samuel-vidovich.medium.com/3-cool-python-libraries-that-will-save-you-time-and-effort-27fcdc6762d5">3 Cool Python Libraries that will Save You Time and Effort&lt;/a>&lt;/h2>
&lt;p>por &lt;a href="https://sandrorgguimaraes.github.io/autores/sam-vidovich/">&lt;strong>Sam Vidovich&lt;/strong>&lt;/a> em 30/08/2021.&lt;/p>
&lt;p>Veja 3 bibliotecas Python que prometem salvar nosso precioso tempo, segundo o autor.&lt;/p>
&lt;ul>
&lt;li>JMESPath&lt;/li>
&lt;li>Inflection&lt;/li>
&lt;li>more-itertools&lt;/li>
&lt;/ul>
&lt;hr></description></item><item><title>Blog: Secrets Module</title><link>https://sandrorgguimaraes.github.io/blog/2022/02/14/secrets-module-python/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><guid>https://sandrorgguimaraes.github.io/blog/2022/02/14/secrets-module-python/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>O modulo Secrets é usado para gerar números aleatórios criptograficamente fortes adequados para gerenciar dados como senhas, autenticação de conta, tokens de segurança e segredos relacionados.&lt;/p>
&lt;p>Fonte.: &lt;a href="https://docs.python.org/3/library/secrets.html/">https://docs.python.org/3/library/secrets.html/&lt;/a>&lt;/p>
&lt;/div>
&lt;hr>
&lt;h2 id="the-secrets-module-of-pythonhttpsmediumcompythoneersthe-secrets-module-of-python-150af4c9f300">&lt;a href="https://medium.com/pythoneers/the-secrets-module-of-python-150af4c9f300">The Secrets Module of Python&lt;/a>&lt;/h2>
&lt;p>por &lt;a href="https://sandrorgguimaraes.github.io/autores/swathi-arun/">&lt;strong>Swathi Arun&lt;/strong>&lt;/a> em 08/09/2021.&lt;/p>
&lt;p>Veja através de alguns exemplos como utilizar este módulo.&lt;/p>
&lt;hr></description></item><item><title>Blog: Decorators</title><link>https://sandrorgguimaraes.github.io/blog/2022/02/10/decorators-python/</link><pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate><guid>https://sandrorgguimaraes.github.io/blog/2022/02/10/decorators-python/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Decorators permite ao usuário adicionar novas funcionalidades a um objeto existente sem modificar sua estrutura.&lt;/p>
&lt;/div>
&lt;hr>
&lt;h2 id="7-levels-of-using-decorators-in-pythonhttpsmediumcomtechtofreedom7-levels-of-using-decorators-in-python-370473fcbe76">&lt;a href="https://medium.com/techtofreedom/7-levels-of-using-decorators-in-python-370473fcbe76">7 Levels of Using Decorators in Python&lt;/a>&lt;/h2>
&lt;p>por &lt;a href="https://sandrorgguimaraes.github.io/autores/yang-zhou/">&lt;strong>Yang Zhou&lt;/strong>&lt;/a> em 13/01/2021.&lt;/p>
&lt;p>Este artigo apresenta de forma simples e objetiva os principais conceitos, técnicas e usos dos decorators Python ao longo de 7 níveis.&lt;/p>
&lt;p>Palavras do autor:&lt;/p>
&lt;blockquote>
&lt;p>Se você entender metade desses níveis, será fácil ler programas Python contendo decorators.&lt;/p>
&lt;p>Se você entender todos eles, projetar e escrever decorators em Python será muito fácil.&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="6-advanced-python-decorator-patternshttpsbetterprogrammingpubsix-advanced-decorator-patterns-5ffe67552691">&lt;a href="https://betterprogramming.pub/six-advanced-decorator-patterns-5ffe67552691">6 Advanced Python Decorator Patterns&lt;/a>&lt;/h2>
&lt;p>por &lt;a href="https://sandrorgguimaraes.github.io/autores/bruce-h.-cottman/">&lt;strong>Bruce H. Cottam&lt;/strong>&lt;/a> em 01/06/2021.&lt;/p>
&lt;p>Neste artigo o autor explica com exemplos de código o funcionamento dos decorators através do desenvolvimento de templates.&lt;/p>
&lt;hr></description></item></channel></rss>