<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Diário de Bordo – Bruce H. Cottman</title><link>https://sandrorgguimaraes.github.io/autores/bruce-h.-cottman/</link><description>Recent content in Bruce H. Cottman on Diário de Bordo</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><lastBuildDate>Tue, 01 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://sandrorgguimaraes.github.io/autores/bruce-h.-cottman/index.xml" rel="self" type="application/rss+xml"/><item><title>Blog: 6 Padrões Avançados de Decorator Python</title><link>https://sandrorgguimaraes.github.io/blog/2021/06/01/6-padroes-avancados-de-decorator-python/</link><pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate><guid>https://sandrorgguimaraes.github.io/blog/2021/06/01/6-padroes-avancados-de-decorator-python/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Decorator é um padrão de design em Python que permite ao usuário adicionar novas funcionalidades a um objeto existente sem modificar sua estrutura.&lt;/p>
&lt;/div>
&lt;p>&lt;a href="https://betterprogramming.pub/six-advanced-decorator-patterns-5ffe67552691">Neste artigo&lt;/a> o &lt;a href="https://sandrorgguimaraes.github.io/autores/bruce-h.-cottman/">Bruce H. Cottam&lt;/a> explica com exemplos de código o seu funcionamento através do desenvolvimento de templates.&lt;/p></description></item></channel></rss>