<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Diário de Bordo – Yang Zhou</title><link>https://sandrorgguimaraes.github.io/autores/yang-zhou/</link><description>Recent content in Yang Zhou on Diário de Bordo</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><lastBuildDate>Wed, 13 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://sandrorgguimaraes.github.io/autores/yang-zhou/index.xml" rel="self" type="application/rss+xml"/><item><title>Blog: 7 níveis de uso de Decorator Python</title><link>https://sandrorgguimaraes.github.io/blog/2021/01/13/7-niveis-de-uso-de-decorator-python/</link><pubDate>Wed, 13 Jan 2021 00:00:00 +0000</pubDate><guid>https://sandrorgguimaraes.github.io/blog/2021/01/13/7-niveis-de-uso-de-decorator-python/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Decorator é um padrão de design em Python que permite ao usuário adicionar novas funcionalidades a um objeto existente sem modificar sua estrutura.&lt;/p>
&lt;/div>
&lt;p>&lt;a href="https://medium.com/techtofreedom/7-levels-of-using-decorators-in-python-370473fcbe76">Neste artigo&lt;/a> você encontrará todos os principais conceitos, técnicas e usos dos decorators Python em 7 níveis.&lt;/p>
&lt;p>Se você entender metade deles, será fácil ler programas Python contendo decorators.&lt;/p>
&lt;p>Se você entender todos eles, projetar e escrever decorators em Python será muito fácil.&lt;/p></description></item></channel></rss>